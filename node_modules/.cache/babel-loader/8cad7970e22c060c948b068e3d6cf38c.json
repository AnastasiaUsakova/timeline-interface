{"ast":null,"code":"var _jsxFileName = \"C:\\\\DB timeline\\\\timeline-web-master upd\\\\timeline-web-master\\\\src\\\\container\\\\Game.js\";\nimport React, { Component } from \"react\";\nimport Table from \"../component/Table\";\nimport Deck from \"../component/Deck\";\nimport Hand from \"../component/Hand\";\nimport Login from \"../component/Login\";\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        login: undefined,\n        password: undefined\n      },\n      hand: [],\n      selectedInHand: -1,\n      table: [],\n      isAuthorized: false\n    };\n\n    this.loadData = () => {\n      let cards = [];\n\n      for (let i = 0; i < 5; i++) {\n        let card = {};\n        card.year = 2000;\n        card.description = \"Карта \" + i;\n        cards.push(card);\n      }\n\n      this.setState({\n        hand: cards,\n        table: [cards[0]]\n      });\n    };\n  }\n\n  componentDidMount() {\n    // useSmth react hooks\n    this.loadData();\n  }\n\n  selectInHand(index) {\n    console.log(\"Index \" + index);\n    const newIndex = this.state.selectedInHand === index ? -1 : index;\n    this.setState({\n      selectedInHand: newIndex\n    });\n  }\n\n  /*добавляем левее индекса*/\n  onClickAddCard(index) {\n    console.log(\"Push \" + index);\n    let tableCards = this.state.table;\n    let handCards = this.state.hand;\n    const selectedHandIndex = this.state.selectedInHand;\n    const handCard = handCards[selectedHandIndex];\n    tableCards.splice(index, 0, handCard);\n    handCards.splice(selectedHandIndex, 1);\n    this.setState({\n      table: tableCards,\n      selectedInHand: -1,\n      hand: handCards\n    });\n  }\n\n  onClickDeck() {\n    let cards = this.state.hand;\n\n    if (cards.length >= 5) {\n      console.log(\"max = 5\");\n    } else {\n      cards.push({\n        id: 23,\n        year: 2021,\n        description: \"Clone\"\n      });\n      this.setState({\n        hand: cards\n      });\n    }\n  }\n\n  onChangeLogin(event) {\n    console.log(\"login\");\n    let user = this.state.user;\n    user.login = event.target.value;\n    this.setState({\n      user: user,\n      isAuthorized: false\n    });\n  }\n\n  onChangePswd(event) {\n    console.log(\"pswd\");\n    let user = this.state.user;\n    user.password = event.target.value;\n    this.setState({\n      user: user,\n      isAuthorized: false\n    });\n  }\n\n  onLogin() {\n    console.log(\"click\");\n    const isAuthorized = this.state.user.login && this.state.user.password;\n    this.setState({\n      isAuthorized: isAuthorized\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.state.isAuthorized ? React.createElement(\"div\", {\n      className: \"game-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, `Player: ${this.state.user.login}`), React.createElement(Table, {\n      cards: this.state.table,\n      editMode: this.state.selectedInHand > -1,\n      onClick: this.onClickAddCard.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"player-hud\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Deck, {\n      onClick: this.onClickDeck.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Hand, {\n      cards: this.state.hand,\n      onClick: this.selectInHand.bind(this),\n      selectedIndex: this.state.selectedInHand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Deck, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))) : React.createElement(Login, {\n      onChangeLogin: this.onChangeLogin.bind(this),\n      onChangePswd: this.onChangePswd.bind(this),\n      onLogin: this.onLogin.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/DB timeline/timeline-web-master upd/timeline-web-master/src/container/Game.js"],"names":["React","Component","Table","Deck","Hand","Login","Game","state","user","login","undefined","password","hand","selectedInHand","table","isAuthorized","loadData","cards","i","card","year","description","push","setState","componentDidMount","selectInHand","index","console","log","newIndex","onClickAddCard","tableCards","handCards","selectedHandIndex","handCard","splice","onClickDeck","length","id","onChangeLogin","event","target","value","onChangePswd","onLogin","render","bind"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Table from \"../component/Table\";\nimport Deck from \"../component/Deck\";\nimport Hand from \"../component/Hand\";\nimport Login from \"../component/Login\";\n\nclass Game extends Component{\n\n    state = {\n        user: {\n            login: undefined,\n            password: undefined\n        },\n        hand: [],\n        selectedInHand: -1,\n        table: [],\n        isAuthorized: false\n    };\n\n    componentDidMount() {// useSmth react hooks\n        this.loadData();\n    }\n\n    loadData = () => {\n        let cards = [];\n        for (let i = 0; i < 5; i++) {\n            let card = {};\n            card.year = 2000;\n            card.description = \"Карта \" + i;\n            cards.push(card);\n        }\n\n        this.setState({hand: cards, table: [cards[0]]});\n    };\n\n    selectInHand(index) {\n        console.log(\"Index \" + index);\n        const newIndex = this.state.selectedInHand === index ? -1 : index;\n        this.setState({selectedInHand: newIndex});\n    };\n\n    /*добавляем левее индекса*/\n    onClickAddCard(index) {\n        console.log(\"Push \" + index);\n        let tableCards = this.state.table;\n        let handCards = this.state.hand;\n        const selectedHandIndex = this.state.selectedInHand;\n        const handCard = handCards[selectedHandIndex];\n        tableCards.splice(index, 0, handCard);\n        handCards.splice(selectedHandIndex, 1);\n        this.setState({table: tableCards, selectedInHand: -1, hand: handCards})\n    };\n\n    onClickDeck() {\n        let cards = this.state.hand;\n        if (cards.length >= 5) {\n            console.log(\"max = 5\");\n        } else {\n            cards.push({id: 23, year: 2021, description: \"Clone\"});\n            this.setState({hand: cards});\n        }\n    }\n\n    onChangeLogin(event) {\n        console.log(\"login\");\n        let user = this.state.user;\n        user.login = event.target.value;\n        this.setState({user: user, isAuthorized: false})\n    };\n\n    onChangePswd(event) {\n        console.log(\"pswd\");\n        let user = this.state.user;\n        user.password = event.target.value;\n        this.setState({user: user, isAuthorized: false})\n    };\n\n    onLogin() {\n        console.log(\"click\");\n        const isAuthorized = this.state.user.login && this.state.user.password;\n        this.setState({isAuthorized: isAuthorized});\n    }\n\n    render() {\n\n        return (\n            <>\n                {\n                    this.state.isAuthorized\n                    ? (\n                        <div className=\"game-table\">\n                            <div className=\"toolbar\">{`Player: ${this.state.user.login}`}</div>\n                            <Table cards={this.state.table}\n                                   editMode={this.state.selectedInHand > -1}\n                                   onClick={this.onClickAddCard.bind(this)}\n                            />\n                            <div className=\"player-hud\">\n                                <Deck onClick={this.onClickDeck.bind(this)}/>\n                                <Hand cards={this.state.hand}\n                                      onClick={this.selectInHand.bind(this)}\n                                      selectedIndex={this.state.selectedInHand}\n                                />\n                                <Deck/>\n                            </div>\n                        </div>\n                    )\n                    : (\n                        <Login onChangeLogin={this.onChangeLogin.bind(this)}\n                               onChangePswd={this.onChangePswd.bind(this)}\n                               onLogin={this.onLogin.bind(this)}\n                        />\n                    )\n                }\n            </>\n        );\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}